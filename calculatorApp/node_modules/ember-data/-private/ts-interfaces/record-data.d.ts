import { JsonApiResource, JsonApiHasManyRelationship, JsonApiBelongsToRelationship } from './record-data-json-api';
export interface ChangedAttributesHash {
    [key: string]: [string, string];
}
export default interface RecordData {
    pushData(data: JsonApiResource, calculateChange?: boolean): any;
    clientDidCreate(): any;
    willCommit(): any;
    commitWasRejected(): any;
    unloadRecord(): any;
    rollbackAttributes(): any;
    changedAttributes(): ChangedAttributesHash;
    hasChangedAttributes(): boolean;
    setDirtyAttribute(key: string, value: any): any;
    getAttr(key: string): any;
    getHasMany(key: string): JsonApiHasManyRelationship;
    addToHasMany(key: string, recordDatas: RecordData[], idx?: number): any;
    removeFromHasMany(key: string, recordDatas: RecordData[]): any;
    setDirtyHasMany(key: string, recordDatas: RecordData[]): any;
    getBelongsTo(key: string): JsonApiBelongsToRelationship;
    setDirtyBelongsTo(name: string, recordData: RecordData | null): any;
    didCommit(data: JsonApiResource | null): any;
    isAttrDirty(key: string): any;
    removeFromInverseRelationships(isNew: boolean): any;
    hasAttr(key: string): boolean;
    isRecordInUse(): boolean;
    _initRecordCreateOptions(options: any): any;
}
