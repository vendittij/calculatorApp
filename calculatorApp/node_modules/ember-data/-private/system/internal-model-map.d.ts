import InternalModel from './model/internal-model';
import { Dict } from '../types';
/**
 `InternalModelMap` is a custom storage map for internalModels of a given modelName
 used by `IdentityMap`.

 It was extracted from an implicit pojo based "internalModel map" and preserves
 that interface while we work towards a more official API.

 @class InternalModelMap
 @private
 */
export default class InternalModelMap {
    modelName: string;
    private _idToModel;
    private _models;
    private _metadata;
    constructor(modelName: string);
    /**
     * @method get
     * @param id {String}
     * @return {InternalModel}
     */
    get(id: string): InternalModel | undefined;
    has(id: string): boolean;
    readonly length: number;
    set(id: string, internalModel: InternalModel): void;
    add(internalModel: InternalModel, id?: string): void;
    remove(internalModel: InternalModel, id: string): void;
    contains(internalModel: InternalModel): boolean;
    /**
     An array of all models of this modelName
     @property models
     @type Array
     */
    readonly models: InternalModel[];
    /**
     * meta information about internalModels
     * @property metadata
     * @type Object
     */
    readonly metadata: Dict<string, any>;
    /**
     Destroy all models in the internalModelTest and wipe metadata.
  
     @method clear
     */
    clear(): void;
}
